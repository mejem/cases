#!/usr/bin/env perl

use strict;
use warnings;
use feature 'say';
use Data::Dumper;

my $head = << 'END';
<!DOCTYPE html>
<html lang="cs">
  <head>
    <meta charset="utf-8">
    <title>Vzory</title>
    <link rel="stylesheet" href="style.css">
  </head>
  <body>
END
print $head;
my %paradigm;
while (<>) {
    chomp;
    s/\[edit\]//;
    my $line = $_;
    next if /^-/;
    my @field = split(/\t/);
    if (defined $field[0] && $field[0] =~ /^[NAGIDLV]$/) {
        $paradigm{"$field[0]"."s"} = $field[1];
        $paradigm{"$field[0]"."d"} = $field[2];
        $paradigm{"$field[0]"."p"} = $field[3];
    } else {
        if (defined $paradigm{Ns}) {
            say "<table class='bordered'>";
            say '<tr><th>Singular';
            say "<tr>" . "<td>" . "$paradigm{Ns}" . "<td>" . "$paradigm{As}" . "<td>" . "$paradigm{Gs}";
            say "<tr>" . "<td>" . "$paradigm{Is}" . "<td>" . "$paradigm{Ds}" . "<td>" . "$paradigm{Ls}";
            say "</table>";
            say "<table class='bordered'>";
            say '<tr><th>Dual';
            say "<tr>" . "<td>" . "$paradigm{Nd}" . "<td>" . "$paradigm{Ad}" . "<td>" . "$paradigm{Gd}";
            say "<tr>" . "<td>" . "$paradigm{Id}" . "<td>" . "$paradigm{Dd}" . "<td>" . "$paradigm{Ld}";
            say "</table>";
            say "<table class='bordered'>";
            say '<tr><th>Plural';
            say "<tr>" . "<td>" . "$paradigm{Np}" . "<td>" . "$paradigm{Ap}" . "<td>" . "$paradigm{Gp}";
            say "<tr>" . "<td>" . "$paradigm{Ip}" . "<td>" . "$paradigm{Dp}" . "<td>" . "$paradigm{Lp}";
            say "</table>";
        }
        if ($line =~ /\S/) {
            say "<h3>" . $line . "</h3>" if $line =~ /\S/;
        } else {
            say "";
        }
        undef %paradigm;
    }
}
say "</body></html>";

